@using PostCity.ViewModels
@using PostCity.ViewModels.Sort
@using PostCity.ViewModels.Filters.FilterModel

@model PageViewModel<Office, OfficeFilterModel>

@{
    ViewData["Title"] = "Office";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Offices</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<script>
    function clearForm() {
        document.getElementById("ownerNameFilter").value = "";
        document.getElementById("ownerMiddlenameFilter").value = "";
        document.getElementById("ownerSurnameFilter").value = "";
        document.getElementById("streetNameFilter").value = "";
        document.getElementById("mobilePhoneFilter").value = "";
        document.getElementById("emailFilter").value = "";
    }
</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-2">
            <div class="card">
                <div class="card-header">
                    Filters
                </div>
                <div class="card-body">
                    <form asp-action="Index" method="post">
                        <div class="mb-2">
                            <label for="ownerNameFilter" class="form-label">Owner Name:</label>
                            <input asp-for="@Model.FilterModel.OwnerName" id="ownerNameFilter" name="OwnerName" class="form-control form-control-sm" /><br />
                        </div>
                        <div class="mb-2">
                            <label for="ownerMiddlenameFilter" class="form-label">Owner Middlename:</label>
                            <input asp-for="@Model.FilterModel.OwnerMiddlename" id="ownerMiddlenameFilter" name="OwnerMiddlename" class="form-control form-control-sm" /><br />
                        </div>
                        <div class="mb-2">
                            <label for="ownerSurnameFilter" class="form-label">Owner Surname:</label>
                            <input asp-for="@Model.FilterModel.OwnerSurname" id="ownerSurnameFilter" name="OwnerSurname" class="form-control form-control-sm" /><br />
                        </div>
                        <div class="mb-2">
                            <label for="streetNameFilter" class="form-label">Street Name:</label>
                            <input asp-for="@Model.FilterModel.StreetName" id="streetNameFilter" name="StreetName" class="form-control form-control-sm" /><br />
                        </div>
                        <div class="mb-2">
                            <label for="mobilePhoneFilter" class="form-label">Mobile Phone:</label>
                            <input asp-for="@Model.FilterModel.MobilePhone" id="mobilePhoneFilter" name="MobilePhone" class="form-control form-control-sm" pattern="^\+375\d{9}$" title="Enter a valid phone number in the format +375999999999" placeholder="+375000000000" /><br />
                        </div>
                        <div class="mb-2">
                            <label for="emailFilter" class="form-label">Email:</label>
                            <input asp-for="@Model.FilterModel.Email" id="emailFilter" name="Email" class="form-control form-control-sm" type="email" /><br />
                        </div>
                        <button type="submit" class="btn btn-primary">Apply Filters</button><br />
                        <a href="#" onclick="clearForm()">Clear Fields</a>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-10">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.OwnerNameSort">
                                @if (ViewBag.OwnerNameSort == OfficeSortState.OwnerNameAsc)
                                {
                                <b>Owner Name ↑</b>
                                }
                                else
                                {
                                <b>Owner Name ↓</b>
                                }
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.OwnerMiddlenameSort">
                                @if (ViewBag.OwnerMiddlenameSort == OfficeSortState.OwnerMiddlenameAsc)
                                {
                                <b>Owner Middlename ↑</b>
                                }
                                else
                                {
                                <b>Owner Middlename ↓</b>
                                }
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.OwnerSurnameSort">
                                @if (ViewBag.OwnerSurnameSort == OfficeSortState.OwnerSurnameAsc)
                                {
                                <b>Owner Surname ↑</b>
                                }
                                else
                                {
                                <b>Owner Surname ↓</b>
                                }
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.StreetNameSort">
                                @if (ViewBag.StreetNameSort == OfficeSortState.StreetNameAsc)
                                {
                                <b>Street Name ↑</b>
                                }
                                else
                                {
                                <b>Street Name ↓</b>
                                }
                    </a>
                </th>
                <th>
                    <b>MobilePhone</b>
                </th>
                <th>
                    <b>Email</b>
                </th>
                <th><b>Actions</b></th>
            </tr>
        </thead>
        <tbody>
                    @foreach (var item in Model.Items)
                    {
                    <tr>
                        <td>
                                @Html.DisplayFor(modelItem => item.OwnerName)
                        </td>
                        <td>
                                @Html.DisplayFor(modelItem => item.OwnerMiddlename)
                        </td>
                        <td>
                                @Html.DisplayFor(modelItem => item.OwnerSurname)
                        </td>
                        <td>
                                @Html.DisplayFor(modelItem => item.StreetName)
                        </td>
                        <td>
                                @Html.DisplayFor(modelItem => item.MobilePhone)
                        </td>
                        <td>
                                @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                             <div class="btn-group">
                                                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                                        <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.Id">Details</a>
                                                        <a class="btn btn-primary" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            </div>
                        </td>
                        
                    </tr>
                    }
        </tbody>
    </table>
    <p>
                @if (Model.HasPreviousPage)
                {
                            <a asp-action="Index" asp-route-page="@(Model.PageNumber - 1)" class="btn btn-primary">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
                                  <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
                                </svg>
                        </a>
                }

                @if (Model.HasNextPage)
                {
                            <a asp-action="Index" asp-route-page="@(Model.PageNumber + 1)" class="btn btn-primary">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
                                  <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8"/>
                                </svg>
                        </a>
                }
    </p>
</div>

</div>